#%RAML 0.8
---
title: API Resource
baseUri: https://localhost/api/
protocols: [HTTPS]
mediaType: application/json

traits:
  - auth: !include _traits/auth.raml

/users:
  description: User resource.
  get:
    is: [auth: { roles: 'staff' }]
    description: Retrive the list of the users.
    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "id": "http://localhost:8080/api/users/54f34c7d8b5e357ca1484c3c",
                  "firstname": "Romain",
                  "lastname": "Terieur",
                  "phone": "+6624582",
                  "roles": [
                    "citizen"
                  ]
                },
                {
                  "id": "http://localhost:8080/api/users/54f34c7d8b5e357ca1484c3c",
                  "firstname": "Romain",
                  "lastname": "Terieur",
                  "phone": "+8211332",
                  "roles": [
                    "citizen",
                    "staff"
                  ]
                },
                ...
              ]
  post:
    description: Create a new user.
    body:
      application/json:
        example: |
          {
            "firstname": "Romain",
            "lastname": "Terieur",
            "phone": "+6624582",
            "roles": [
              "citizen"
            ]
          }
    responses:
      201:
        body:
          application/json:
            example: |
              {
                "id": "http://localhost:8080/api/users/54f34c7d8b5e357ca1484c3c",
                "firstname": "Romain",
                "lastname": "Terieur",
                "phone": "+8211332",
                "roles": [
                  "citizen",
                  "staff"
                ]
              },

  /{id}:
    get:
      is: [auth: {roles: 'any'} ]
      description: Retrieve the details of a specific user.
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "http://localhost:8080/api/users/54d8ae163fd30364605c81a4",
                  "firstname": "Romain",
                  "lastname": "Terieur",
                  "phone": "+6624582",
                  "roles": [
                    "citizen"
                  ]
                }
    put:
      is: [auth: {roles: 'staff'} ]
      description: Update the details of a specific user.
      body:
        application/json:
          example: |
            {
              "firstname": "Romain",
              "lastname": "Terieur",
              "phone": "+6624582",
              "roles": [
                "citizen"
              ]
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "http://localhost:8080/api/users/54d8ae163fd30364605c81a4",
                  "firstname": "Romain",
                  "lastname": "Terieur",
                  "phone": "+6624582",
                  "roles": [
                    "citizen"
                  ]
                }
    delete:
      is: [auth: {roles: 'staff'} ]
      description: Delete a specific user.
      responses:
        204:
          body:

/issues:
  description: Issue that have been reported.
  get:
    is: [auth: {roles: 'any'} ]
    description: List issues that have been reported.
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "id": "http://localhost:8080/api/issues/54d8ae163fd30364605c81a4",
                "author": "Romain Terreur (user)",
                "issueType": "http://localhost:8080/api/IssuesTypes/54d8ae163fd30364605c81a4",
                "description": "Lampadaire tombé par terre",
                "geoCoordonnee":"45.7686;57.66646",
                "status": "ouvert",
                "date" : "2014-01-15",
                "roles": [
                  "citizen" ],
                "actions": [ "54d8ae163fd30364605c81a4", "54d8ae163fd30364605c81a4"
                  ]
              },
              {
                "id": "http://localhost:8080/api/issues/54d8ae163fd30364605c81a4",
                "author": "Romain Terreur (user)",
                "issueType": "http://localhost:8080/api/IssuesTypes/54d8ae163fd30364605c81a4",
                "description": "Lampadaire tombé par terre",
                "geoCoordonnee":"45.7686;57.66646",
                "status": "ouvert",
                "date" : "2014-01-15",
                "roles": [
                  "citizen" ],
                "actions": [ "54d8ae163fd30364605c81a4", "54d8ae163fd30364605c81a4"
                  ]
              },
              ...

  post:
    is: [auth: {roles: 'any'} ]
    description: Create a new issue.
    body:
      application/json:
        example: |
          {
            "author": "Romain Terreur (user)",
            "issueType": "54d8ae163fd30364605c81a4",
            "description": "Lampadaire tombé par terre",
            "geoCoordonnee":"45.7686;57.66646",
            "status": "ouvert"
            "date" : "2014-01-15",
          }
    responses:
      201:
        body:
          application/json:
            example: |
              {
                "id": "http://localhost:8080/api/issues/54d8ae163fd30364605c81a4",
                "author": "Romain Terreur (user)",
                "issueType": "http://localhost:8080/api/IssuesTypes/54d8ae163fd30364605c81a4",
                "description": "Lampadaire tombé par terre",
                "geoCoordonnee":"45.7686;57.66646",
                "status": "ouvert",
                "date" : "2014-01-15",
                "roles": [
                  "citizen" ],
                "actions": [ "54d8ae163fd30364605c81a4", "54d8ae163fd30364605c81a4"
                  ]
              }

  /{id}:

    get:
      is: [auth: {roles: 'any'} ]
      description: Get a specific issue.
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "http://localhost:8080/api/issues/54d8ae163fd30364605c81a4"
                  "author": "Romain Terreur (user)",
                  "issueType": "http://localhost:8080/api/IssuesTypes/54d8ae163fd30364605c81a4",
                  "description": "Lampadaire tombé par terre",
                  "geoCoordonnee":"45.7686;57.66646",
                  "status": "ouvert",
                  "roles": [
                    "citizen"],
                  "actions": [ "54d8ae163fd30364605c81a4", "54d8ae163fd30364605c81a4"
                  ]
                }

    put:
      is: [auth: {roles: 'staff, user'} ]
      description: Update a issue.
      body:
        application/json:
          example: |
            {
              "author": "Romain Terreur (user)",
              "issueType": "54f36b728b5ed36fd1527b38",
              "description": "Lampadaire tombé par terre",
              "geoCoordonnee":"45.7686;57.66646",
              "status": "ouvert",
              "date" : "2014-01-15",
              "roles": [
                "citizen"],
              "actions": [ "54d8ae163fd30364605c81a4", "54d8ae163fd30364605c81a4"
              ]
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "http://localhost:8080/api/issues/54d8ae163fd30364605c81a4"
                  "author": "Romain Terreur (user)",
                  "issueType": "http://localhost:8080/api/IssuesTypes/54d8ae163fd30364605c81a4",
                  "description": "Lampadaire tombé par terre",
                  "geoCoordonnee":"45.7686;57.66646",
                  "status": "ouvert",
                  "date" : "2014-01-15",
                  "roles": [
                    "citizen"],
                  "actions": [ "54d8ae163fd30364605c81a4", "54d8ae163fd30364605c81a4"
                  ]
                }
    delete:
      is: [auth: {roles: 'staff, user'} ]
      description: Drop issues.
      responses:
        204:
          body:

    /actions:

      get:
        is: [auth: {roles: 'any'} ]
        description: Show an all actions for an issue.
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "id": "http://localhost:8080/api/actions/54d8ae163fd30364605c81a4",
                    "author": "Jean-marc Delessert",
                    "date": "07-02-15",
                    "comment": "Brought the broken lamp to the dump"
                  },
                  {
                    "id": "http://localhost:8080/api/actions/54d8ae163fd30364605c81a4",
                    "author": "Jean-marc Delessert",
                    "date": "07-02-15",
                    "comment": "Brought the broken lamp to the dump"
                  }
                  ...
      post:
        is: [auth: {roles: 'staff'} ]
        description: Add a action ton a certain issue.
        body:
          application/json:
            example: |
              {
                "author": "Jean-marc Delessert",
                "date": "07-02-15",
                "comment": "Brought the broken lamp to the dump"
              }
        responses:
          201:
            body:
              application/json:
                example: |
                  {
                    "id": "http://localhost:8080/api/actions/54d8ae163fd30364605c81a4",
                    "author": "Jean-marc Delessert",
                    "date": "07-02-15",
                    "comment": "Brought the broken lamp to the dump"
                  }
/issueTypes:
  description: List of the type of issues.
  get:
    is: [auth: {roles: 'any'} ]
    description: Show all issuetypes.
    responses:
      200:
        body:
          application/json:
            example: |
              {
               "id": "http://localhost:8080/api/IssuesTypes/54d8ae163fd30364605c81a4",
               "shortName": "Broken stuff"
              },
              {
               "id": "http://localhost:8080/api/IssuesTypes/54d8ae163fd30364605c81a4",
               "shortName": "Broken stuff"
              },
              ...
  post:
    is: [auth: {roles: 'staff'} ]
    description: Create a new issuetype.
    body:
      application/json:
        example: |
          {
            "shortName": "Broken stuff"
          }
    responses:
      201:
        body:
          application/json:
            example: |
              {
               "id": "http://localhost:8080/api/IssuesTypes/54d8ae163fd30364605c81a4",
               "shortName": "Broken stuff"
              }

  /{id}:
    put:
      is: [auth: {roles: 'staff'} ]
      description: Update an issuetype.
      body:
        application/json:
          example: |
            {
              "shortName": "Broken stuff"
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "http://localhost:8080/api/IssuesTypes/54d8ae163fd30364605c81a4",
                  "shortName": "Broken stuff"
                }

    get:
      is: [auth: {roles: 'any'} ]
      description: Show a issuetype on id.
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": ""http://localhost:8080/api/IssuesTypes/54d8ae163fd30364605c81a4",
                  "shortNname": "Broken stuff"
                }
    delete:
      is: [auth: {roles: 'staff'} ]
      description: Drop a issuetype.
      responses:
        204:
          body:

/actions:
  description: Actions that have been done to resolve issues.
  get:
    is: [auth: {roles: 'staff'} ]
    description: Show all actions.
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "id": ""http://localhost:8080/api/Actions/54d8ae163fd30364605c81a4",
                "author": "Jean-marc Delessert",
                "date": "07-02-15",
                "comment": "Brought the broken lamp to the dump"
              },
              {
                "id": ""http://localhost:8080/api/Actions/54d8ae163fd30364605c81a4",
                "author": "Jean-marc Delessert",
                "date": "07-02-15",
                "comment": "Brought the broken lamp to the dump"
              },
              ...
  /{id}:
    put:
      is: [auth: {roles: 'staff'} ]
      description: Update an action.
      body:
        application/json:
          example: |
            {
              "author": "Jean-marc Delessert",
              "date": "07-02-15",
              "comment": "Brought the broken lamp to the dump"
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": ""http://localhost:8080/api/Actions/54d8ae163fd30364605c81a4",
                  "author": "Jean-marc Delessert",
                  "date": "07-02-15",
                  "comment": "Brought the broken lamp to the dump"
                }

/data:
  description: Permit to populate users.
  /populate:
    post:
      is: [auth: {roles: 'any'}]
      description: Allow to populate random data to have a starting situation.
      responses:
        200:
          body:
